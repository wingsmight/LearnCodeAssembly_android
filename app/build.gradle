


buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/repo' }
}



android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.maskyn.fileeditor"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 47
        versionName "1.19"
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    signingConfigs {
        release {

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation project(':shared')
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

task incrementVersionCode {
    doLast {
        println(":incrementVersionCode - Incrementing Version Code...")
        def buildGradleFile = file("build.gradle")
        def patternVersionCode = Pattern.compile("versionCode (\\d+)")
        def buildGradleFileText = buildGradleFile.getText()
        def matcherVersionCode = patternVersionCode.matcher(buildGradleFileText)
        matcherVersionCode.find()
        def mVersionCode = Integer.parseInt(matcherVersionCode.group(1))
        def mNextVersionCode = mVersionCode + 1
        def manifestContent = matcherVersionCode.replaceAll("versionCode " + mNextVersionCode)
        println(":incrementVersionCode - current versionCode=" + mVersionCode);
        println(":incrementVersionCode - next versionCode=" + mNextVersionCode);
        buildGradleFile.write(manifestContent)
    }
}
